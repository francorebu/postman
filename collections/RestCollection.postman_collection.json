{
	"info": {
		"_postman_id": "f6af0796-d59d-4f85-a6f1-27026b2a994b",
		"name": "RestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post",
			"item": [
				{
					"name": "loginSuccessful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var nombreRandom = pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"var timeRandom = pm.variables.replaceIn('{{$timestamp}}')\r",
									"var dominio = \"@falabella.cl\"\r",
									"var emailFinal = \"test_\" + nombreRandom + \"_\" + timeRandom + dominio\r",
									"pm.environment.set(\"userName\", emailFinal);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"name\": {\r",
									"        \"type\": \"string\"\r",
									"        },\r",
									"        \"job\": {\r",
									"        \"type\": \"string\"\r",
									"        },\r",
									"        \"id\": {\r",
									"        \"type\": \"string\"\r",
									"        },\r",
									"        \"createdAt\": {\r",
									"        \"type\": \"string\"\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\r",
									"        \"name\",\r",
									"        \"job\",\r",
									"        \"id\",\r",
									"        \"createdAt\"\r",
									"    ]\r",
									"};\r",
									"\r",
									"\r",
									"pm.test('Schema validation', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{last_name}}\",\r\n    \"job\": \"{{userName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginUnsuccessful",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "registerSuccessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "registerUnsuccessful",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\", \r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginFromCurl",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "this is a request fon valid credential.\nIt returns token and 200 ok status code"
					},
					"response": []
				},
				{
					"name": "CreateUser 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment'); \r",
									"pm.environment.set('timestamp', moment().format((\"YYYY.MM.DD.HH.mm.SS.ss\"))); \r",
									"pm.environment.set('date', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"{{$isoTimestamp}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"userNumber\", \"userNumber\" + 1);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get",
			"item": [
				{
					"name": "singleUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Hola\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2"
							]
						},
						"description": "aa"
					},
					"response": []
				},
				{
					"name": "usersList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"previous token value: \" + pm.environment.get(\"token\"));\r",
									"pm.environment.set(\"token\", 666);\r",
									"console.log(\"after token value: \" + pm.environment.get(\"token\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body contains\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
									"});",
									"",
									"",
									"pm.test(\"Body json value check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data[0].email).to.eql(\"michael.lawson@reqres.in\");",
									"});",
									"",
									"pm.test(\"Content-Type appears on header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"response code validation\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listResourceUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/unknown",
							"host": [
								"{{url}}"
							],
							"path": [
								"unknown"
							]
						}
					},
					"response": []
				},
				{
					"name": "listResourceSingleUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/unknown/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"unknown",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delayedResponse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users?delay=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "delay",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "userNotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/23",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"23"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put",
			"item": [
				{
					"name": "updateUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"John\",\r\n    \"job\": \"Analyst\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patch",
			"item": [
				{
					"name": "updateUser",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion residenttt\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/users/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}